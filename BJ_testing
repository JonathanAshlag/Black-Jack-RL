from Black_JAck import BlackJackEnv
import numpy as np
import gymnasium as gym
import matplotlib.pyplot as plt
from stable_baselines3 import PPO

env=BlackJackEnv()
models_dir='RLsideoroject/ppo_agents'
model_path=f"{models_dir}/380000.zip"

agent=PPO.load(model_path,env=env)


player_sums = np.arange(4, 23, 2)
dealer_sums = np.arange(2, 12)

player_mesh, dealer_mesh = np.meshgrid(player_sums, dealer_sums)

actions = np.empty_like(player_mesh, dtype=int)  # Use int dtype for numeric values

action_mapping = {"0": 0, "1": 1, "2": 2,}  # 0=stand,1=hit,2=splitt

for i in range(len(player_sums)):
    for j in range(len(dealer_sums)):
        env.reset()
        
        if i==11:
            env.set_stage(sum1=12, dealersum=dealer_sums[j],ace=1, split=1)
        else:
            env.set_stage(sum1=player_sums[i], dealersum=dealer_sums[j],ace=0, split=1)
        obs = env._get_obs()
        action_str, _ = agent.predict(obs)
        actions[j, i] = action_mapping.get(str(action_str))  

plt.figure(figsize=(10, 6))
plt.pcolormesh(player_mesh, dealer_mesh, actions, cmap='coolwarm', edgecolors='w', linewidth=0.5)

cbar = plt.colorbar()
cbar.set_label('Agent Action', rotation=270, labelpad=15)

plt.xlabel('Player Sum')
plt.ylabel('Dealer Sum')
plt.title('red= hit,blue=stand')

# Display the plot
plt.show()